varRefs = alle referanser i rekkefølge fra ytterste scope til innerst


###########################################################################################################################
###########################################################################################################################

for $b in (expr)
return expr1(/wo b)

numberate(indx, [bnumb, indx], [varRefs]
    cross(
        project([bnumb = index]; expr)
        expr1(/wo b)


###########################################################################################################################
###########################################################################################################################

for $b in (expr)
return expr1(/m b)

numberate(indx, [bnumb, indx], [varRefs-bnumb]
    expr1(/m b))



###########################################################################################################################
###########################################################################################################################

(expr1, expr2)       (husk taint)     

(hvis den er en sekvens har den allerede indx)

numberate(index,[sprIdx, indx],[varRefs]                                     //TODO: SJEKK OM ALLE VARREFS SKAL VÆRE HER
    union(project(sprIdx = 1; expr1); project(sprIndx = 2; expr2))

hvis exprN er atomisk eller itervariabeldependant ----> project(sprIdx = N,indx = 0; exprN);

Hvis bare atomiske eller iteratorvariabeldependent ---> drop sprIndx = indx

###########################################################################################################################
###########################################################################################################################

mangler index etter group(fdkjfkdj, max(value)


group( [], max(value), expr) bør være lov