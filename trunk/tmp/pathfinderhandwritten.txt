for $i in /BOOKS/ITEM
return
    if($i/MAYBE) then
        "har maybe"
    else
        "ingen maybe"


select(isNull(xnumb), true, eq(number, xnumb))
    cross(
        project(number = counter(), etc..
            scope(/BOOKS, lookup($ITEM))    
        select(ifThenElse(xqueryBoolean(l.value), eq(alt, 1), eq(alt, 2));
            cross(
                mergeInJoin( //////////////////////////////////////////////////////////////////////////////////////RIGHT OUTER
                    scope(/BOOKS/ITEM, lookup($MAYBE))
                    project(xnumb = counter(), etc..
                        scope(/BOOKS, lookup($ITEM))
                or(
                    project(alt = 1, value)
                        make("har maybe");
                    project(alt = 2, value)
                        make("ingen maybe")



#######################################################################################################################
#######################################################################################################################

if (1) then
    "hei"
else
    "nei"

select(ifThenElse(xqueryBoolean(l.value), eq(alt, 1), eq(alt, 2));
    cross(
        make(value = 1)
        or(
            project(alt = 1, value
                make("hei")    
            project(alt = 2, value
                make("nei")




#######################################################################################################################
#######################################################################################################################

SLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLIT
SLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLIT

/BOOKS/ITEM[MAYBE and /BOOKS]/TITLE


        
        

SLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLIT
SLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLITSLIT

#######################################################################################################################
#######################################################################################################################


/BOOKS/ITEM/TITLE and /BOOKS/ITEM/MAYBE


project(value = and(xqueryBoolean(l.value), xqueryBoolean(r.value); xnumb    
    cross(
        scope(/BOOKS/ITEM, lookup($TITLE))
        scope(/BOOKS/ITEM, lookup($MAYBE))


#######################################################################################################################
#######################################################################################################################

for $x in (0,10,20)
return $x and "he"


select(isNull(xnumb), true, eq(number, xnumb))
cross(
    project(number = counter();
        make(0,10,20)
    project_distinct(2;             //1+1
        project(value = and(xqueryBoolean(l.value), xqueryBoolean(r.value); xnumb    
            cross(
                project(xnumb = counter();
                    make(0,10,20)
                make("he")



#######################################################################################################################
#######################################################################################################################


for $x in (100. 200. 300)
let $y := (30, 40)
where $y > 100
return $x


select(isNull(xnumb), true, eq(number, xnumb))
cross(
    cross(
        project(number = counter(),
            make(value, 100, 200, 300)
        project(xnumb = counter(), value)
            make(value, 100,200,300)
    select(xqueryBoolean(value);
        group(value = count();                                          
            select(gt(l.val, r.val);
                cross(
                    make(value =  30,40)
                    make(value = 100)


#######################################################################################################################
#######################################################################################################################


for $x in (20,21,22)
let $y := $x + 1
where $y > 22
return $y +10


                                                //project bort xnumb og number
select(isNull(xnumb), true, eq(number, xnumb))
                                                //project bort w.xnumb
select(isNull(w.xnumb), true, eq(number, w.xnumb))
cross(                                                          //forløkke
    cross(                                                      //RETURNCLAUSE
        project(number = count(),
            make(20,21,22)
        project(value = add(l.value, r.value), xnumb                    //distict(xnumb ?
            cross(
                make(value 10)
                project(value = add(l.value, r.value), xnumb
                    cross(
                        make(value, 1)
                        project(xnumb = count(),
                            make(value, 20,21,22)

    select(xqueryBoolean(value)                                                    //WHERECLAUSE   bruke(select(eq(pred, true), xnumb)
        project_distinct(2;
            project(pred = gt(l.value, r.value), xnumb
                cross(    
                    project(value = add(l.value, r.value), xnumb
                        cross(
                            make(value, 1)
                            project(xnumb = count(),
                                make(value, 20,21,22
                    make(value, 22)





#######################################################################################################################
#######################################################################################################################


for $x in (20,30) return
    for $y in (15, 25) return
        (/BOOKS/ITEM[$x > $y]/TITLE, "hei")
        



                    //project bort number og xnumb
select(isNull(xnumb), true, eq(number, xnumb))
cross(
    project(number = count(), val
        make(val, 20,30)
                //  project(bort numb og ynumb,
    select(isNull(ynumb), true, eq(number, ynumb))
        cross(
            project(number = count(), val
                make(val, 15, 25)
            or(
                        //    projectbort pred 
                mergeInScope(
                    scope(/BOOKS/ITEM, lookup($TITLE))
                        select(ifThenElse(isNumber(pred), scopeIndex(scope, pred), xqueryBoolean(pred)), 
                            cross(
                                    project_distinct(3,
                                        project(pred = gt(l.val, r.val), xnumb, ynumb
                                            cross(
                                                project(xnumb = count(),
                                                    make(val 20,30)
                                                project(ynumb = count()
                                                    make(val, 15,25)
                                    scope(/BOOKS, lookup($ITEM))
                make(val, "hei")



#######################################################################################################################
#######################################################################################################################


for $x in /BOOKS return
    for $y in (1,3)
        return $x/ITEM[$y]/TITLE




select( number == xnumb
cross(        
    project(number = count()
        scope(/, lookup($BOOKS))            //$x

    project(bort med alt med y
    select( number == ynumb
    cross(                                                      //forløkke med $y
        project(number = count()
            make(1,3)
        mergeInScope(
            scope(/BOOKS/ITEM, lookup($TITLE)
            project(pred2 = 1  / bort med y-verdier      (ikke pred# og ynumb.xnumb
                select(ifThenElse(isNumber(y.val), scopeIndex(scope, y.val), xqueryBoolean(y.val))
                cross(       
                    project( yval = ifThenElse( gt(yval, rval), true, false), ynumb)
                       cross(
                            project(ynumb= count(), yval = value                                 //predikatet
                                make(y.val = 1,3)    //$y
                            make(rval 0)
                    mergeInScope(
                        scope(/BOOKS, lookup($ITEM))
                        project(pred1 = 1, xnumb = count();
                            scope(/, lookup($BOOKS))            //$x







#######################################################################################################################
#######################################################################################################################


for $x in (1,2) return
    ($x,
        for $y in (10,20) return
        ($x, $y, "hei")



project(bort med forvariabel)
select(isNull(xnumb), true, eq(number, xnumb))
cross(
    project(number=count(), etc
        make(1, 2        
    or(
        project(xnumb = count()
            make(1,2)
        project(bort med forvariabel)
            select(ifThenElse(isNull(ynumb),true, eq(number, ynumb)
                cross(
                    project(number = count(), etc
                        make(10,20)
                    or(
                        project(xnumb = count()
                            make(1,2)
                        project(ynumb=count()
                            make(10,20)
                        make("hei")







#######################################################################################################################
#######################################################################################################################
#######################################################################################################################

pathfinder loop lift






 {           for $v0 in (1,2) return
s|      {        ($v0,
 |    s0|         for $v00 in (10,20) return
 {      {   s00{  ($v0, $v00)



//FERDIG
project(iter = outer, pos=pos1, item
    project(pos1 = count(outer), etc
        sort(outer,iter,pos
            join(iter = inner
                ##s0hel
                ##map( ,0)






project( iter, pos=pos1, item       //##s0hel
    project(pos1 = count(iter), ord, iter, pos, item
        sort(iter,ord, pos)
            or
                cross(
                    make(ord, 1)
                    ##q0($v0)
                cross
                    make(ord, 2)
                    ##s0del



                                    //##map( ,0)
project(outer=iter, inner
    project(inner=count(), iter ,pos
        ##q($v0)






                                                        //##s0del
project(iter=outer, pos=pos1, item
    project(pos1 = count(outer), etc
        sort(outer, iter, pos
            join( iter=inner
                ##s00
                ##map(0,00)

                                                                //##s00
project( iter, pos=pos1, item
    project(pos1 = count(iter), ord, iter, pos, item
        sort(iter,ord, pos)
            or
                cross(
                    make(ord, 1)
                    ##q00($v0)
                cross
                    make(ord, 2)
                    ##q00($v00)








project(iter=inner, pos, item                           //##q00($v0)
    join(iter=outer
        ##q0($v0)
        ##map(0,00)


cross(                                                  // ##q00($v00)##
    make(pos, 1)
    project(iter=inner, item
        project(inner = count(), iter, pos, item
            cross(                                      //##q0($v00) loop lift
                project(pos=count(), item)
                    make(item, 10,20)
                project(iter,
                    ##q0($v0)##



cross(                                                  // ##q0($v0)##
    make(pos, 1)
    project(iter=inner, item
        project(inner = count(), iter, pos, item
            cross(                                      // ##q($v0)##
                    project(pos = count(), item) 
                        make(item, 1,2)
                    make(iter, 1)                       //loop



        



map(0,00) =
        project(outer= iter, inner
            project(inner = count(), iter, pos, item
              ##q0($v00)
